version: pythonocc-demos-0.18.2-dev.{build}

environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\obvci_appveyor_python_build_env.cmd"
  
    # Workaround for https://github.com/conda/conda-build/issues/636
    PYTHONIOENCODING: "UTF-8"

  matrix:
    - PYTHON: "C:\\Python27_32"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda"
    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda-x64"
    - PYTHON: "C:\\Python35_32"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      CONDA_PY: "35"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35"
    - PYTHON: "C:\\Python35_64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      CONDA_PY: "35"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
    - PYTHON: "C:\\Python36_32"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      CONDA_PY: "36"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36"
    - PYTHON: "C:\\Python36_64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"
    - PYTHON: "C:\\Python37_32"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "37"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda37"
    - PYTHON: "C:\\Python37_64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "37"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda37-x64"
# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

install:
    # Set the CONDA_NPY, although it has no impact on the actual build. We need this because of a test within conda-build.
    - cmd: set CONDA_NPY=19
    # Remove cygwin (and therefore the git that comes with it).
    - cmd: rmdir C:\cygwin /s /q
    # Use the pre-installed Miniconda for the desired arch
    #
    # However, it is really old. So, we need to update some
    # things before we proceed. That seems to require it being
    # on the path. So, we temporarily put conda on the path
    # so that we can update it. Then we remove it so that
    # we can do a proper activation.
    - cmd: set "OLDPATH=%PATH%"
    - cmd: set "PATH=%CONDA_INSTALL_LOCN%\\Scripts;%CONDA_INSTALL_LOCN%\\Library\\bin;%PATH%"
    - cmd: conda config --set always_yes yes --set changeps1 no
    - cmd: conda update conda
    - cmd: set "PATH=%OLDPATH%"
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: conda config --set show_channel_urls true
    - cmd: conda config --add channels https://conda.anaconda.org/conda-forge
    - cmd: conda config --add channels https://conda.anaconda.org/dlr-sc
    - cmd: conda config --add channels https://conda.anaconda.org/oce
    - cmd: conda config --add channels https://conda.anaconda.org/pythonocc
    - cmd: conda config --add channels https://conda.anaconda.org/tpaviot
    - cmd: conda install -c tpaviot pythonocc-core==0.18.2
    #- cmd: conda install pyqt
    #- cmd: conda install wxpython
    - cmd: conda install numpy


build: off

test_script:
  - cmd: 'python run_examples_as_tests.py'
